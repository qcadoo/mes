<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<plugin plugin="productFlowThruDivision" group="other"
        version="${qcadoo.plugin.version}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://schema.qcadoo.org/plugin" xmlns:model="http://schema.qcadoo.org/modules/model"
        xmlns:view="http://schema.qcadoo.org/modules/view"
        xmlns:menu="http://schema.qcadoo.org/modules/menu"
        xmlns:localization="http://schema.qcadoo.org/modules/localization"
        xmlns:custom="http://schema.qcadoo.org/modules/custom"
        xsi:schemaLocation="http://schema.qcadoo.org/plugin
       http://schema.qcadoo.org/plugin.xsd
       http://schema.qcadoo.org/modules/model
       http://schema.qcadoo.org/modules/model.xsd
       http://schema.qcadoo.org/modules/view
       http://schema.qcadoo.org/modules/view.xsd
       http://schema.qcadoo.org/modules/localization
       http://schema.qcadoo.org/modules/localization.xsd
       http://schema.qcadoo.org/modules/menu
       http://schema.qcadoo.org/modules/menu.xsd
       http://schema.qcadoo.org/modules/custom
       http://schema.qcadoo.org/modules/custom.xsd">

    <information>
        <name>MES - Product Flow Thru Division</name>
        <vendor>
            <name>Qcadoo Limited</name>
            <url>http://www.qcadoo.com/</url>
        </vendor>
        <description>Product Flow Thru Division</description>
        <license>AGPL</license>
    </information>

    <dependencies>
        <dependency>
            <plugin>productionCounting</plugin>
            <version>[1.2.1</version>
        </dependency>
        <dependency>
            <plugin>materialFlowResources</plugin>
            <version>[1.2.1</version>
        </dependency>
        <dependency>
            <plugin>costNormsForMaterials</plugin>
            <version>[1.2.1</version>
        </dependency>
        <dependency>
            <plugin>deliveries</plugin>
            <version>[1.4.0</version>
        </dependency>
    </dependencies>

    <modules>
        <localization:translation path="locales"/>

        <model:model model="modelCard" resource="model/modelCard.xml"/>
        <model:model model="modelCardProduct" resource="model/modelCardProduct.xml"/>

        <!--    orderProductResourceReservation  -->
        <model:model model="orderProductResourceReservation" resource="model/orderProductResourceReservation.xml"/>
        <model:model model="trackingProductResourceReservation"
                     resource="model/trackingProductResourceReservation.xml"/>

        <model:model-field plugin="basicProductionCounting" model="productionCountingQuantity">
            <model:hasMany name="orderProductResourceReservations"
                           model="orderProductResourceReservation" plugin="productFlowThruDivision"
                           joinField="productionCountingQuantity" cascade="delete"/>
        </model:model-field>


        <model:model-field plugin="materialFlowResources" model="resource">
            <model:hasMany name="orderProductResourceReservations"
                           model="orderProductResourceReservation" plugin="productFlowThruDivision" joinField="resource"/>
        </model:model-field>


        <model:model-field plugin="materialFlowResources" model="reservation">
            <model:belongsTo name="orderProductResourceReservation" model="orderProductResourceReservation"
                             plugin="productFlowThruDivision"/>
        </model:model-field>

        <model:model-field plugin="materialFlowResources" model="reservation">
            <model:belongsTo name="order" model="order"
                             plugin="orders"/>
        </model:model-field>

        <model:model-field plugin="productionCounting" model="trackingOperationProductInComponent">
            <model:hasMany name="resourceReservations"
                           model="trackingProductResourceReservation" plugin="productFlowThruDivision"
                           joinField="trackingOperationProductInComponent" cascade="delete"/>
        </model:model-field>


        <view:view resource="view/orderProductResourceReservationDetails.xml"/>

        <model:model-hook plugin="productionCounting" model="trackingOperationProductInComponent">
            <model:onSave
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.TrackingOperationProductInComponentHooksPFTD"
                    method="onSave"/>
        </model:model-hook>


        <!--    koniec orderProductResourceReservation  -->

        <model:model-field plugin="basic" model="division">
            <model:enum name="productionFlow" values="01warehouse,02withinTheProcess"
                        default="02withinTheProcess"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:belongsTo name="componentsLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:belongsTo name="componentsOutputLocation"
                             model="location" plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:belongsTo name="productsInputLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:belongsTo name="wasteReceptionWarehouse" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basic" model="division">
            <model:belongsTo name="productsFlowLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="materialFlow" model="location">
            <model:hasMany name="componentsLocationDivisions"
                           model="division" plugin="basic" joinField="componentsLocation"/>
        </model:model-field>

        <model:model-field plugin="materialFlow" model="location">
            <model:hasMany name="componentsOutputLocationDivisions"
                           model="division" plugin="basic" joinField="componentsOutputLocation"/>
        </model:model-field>

        <model:model-field plugin="materialFlow" model="location">
            <model:hasMany name="productsInputLocationDivisions"
                           model="division" plugin="basic" joinField="productsInputLocation"/>
        </model:model-field>

        <model:model-field plugin="materialFlow" model="location">
            <model:hasMany name="productsFlowLocations"
                           model="division" plugin="basic" joinField="productsFlowLocation"/>
        </model:model-field>

        <model:model-field plugin="materialFlowResources" model="reservation">
            <model:belongsTo name="productsToIssue" model="productsToIssue"
                             plugin="productFlowThruDivision"/>
        </model:model-field>

        <!-- Flow -->

        <model:model-field plugin="technologies" model="technology">
            <model:belongsTo name="componentsLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies" model="technology">
            <model:belongsTo name="componentsOutputLocation"
                             model="location" plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies" model="technology">
            <model:belongsTo name="productsInputLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies" model="technology">
            <model:belongsTo name="wasteReceptionWarehouse" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <!-- operationProductInComponent -->

        <model:model-field plugin="technologies"
                           model="operationProductInComponent">
            <model:belongsTo name="componentsLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies"
                           model="operationProductInComponent">
            <model:belongsTo name="componentsOutputLocation"
                             model="location" plugin="materialFlow"/>
        </model:model-field>

        <!-- operationProductOutComponent -->

        <model:model-field plugin="technologies"
                           model="operationProductOutComponent">
            <model:belongsTo name="productsInputLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies"
                           model="operationProductOutComponent">
            <model:belongsTo name="wasteReceptionWarehouse" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="materialFlowResources" model="document">
            <model:belongsTo name="order" model="order" plugin="orders"/>
        </model:model-field>

        <model:model-field plugin="materialFlowResources" model="documentDto">
            <model:integer name="order_id"/>
        </model:model-field>

        <model:model-field plugin="materialFlowResources" model="documentDto">
            <model:string name="orderNumber"/>
        </model:model-field>

        <model:model-field plugin="materialFlowResources" model="positionDto">
            <model:string name="orderNumber"/>
        </model:model-field>

        <model:model-field plugin="orders" model="order">
            <model:hasMany name="documents" model="document" plugin="materialFlowResources" joinField="order"/>
        </model:model-field>

        <model:model-field plugin="orders" model="order">
            <model:hasMany name="warehouseIssues" model="warehouseIssue" plugin="productFlowThruDivision"
                           joinField="order"/>
        </model:model-field>

        <model:model-field plugin="orders" model="order">
            <model:boolean name="ignoreMissingComponents" default="true"/>
        </model:model-field>

        <model:model-field plugin="orders" model="orderPlanningListDto">
            <model:enum name="availability" values="none,partial,full" persistent="false"/>
        </model:model-field>

        <model:model-field plugin="orders" model="orderPlanningListDto">
            <model:string name="availabilityCellColor" persistent="false"/>
        </model:model-field>

        <!-- parameters -->

        <model:model-field plugin="basic" model="parameter">
            <model:enum name="productsToIssue" values="01allInputProducts,02onlyMaterials"
                        default="01allInputProducts" required="true"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:enum name="warehouseIssueProductsSource" values="01order,02manual"
                        default="01order" required="true"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:boolean name="automaticReleaseAfterGeneration" default="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:boolean name="ignoreMissingComponents" default="true"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:enum name="momentOfValidation" values="01orderAcceptance,02orderStarting"
                        default="01orderAcceptance" required="true"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:boolean name="generateWarehouseIssuesToOrders" default="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:integer name="daysBeforeOrderStart">
                <model:validatesRange from="0"/>
            </model:integer>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:belongsTo name="issueLocation"
                             model="location" plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:enum name="drawnDocuments" values="01transfer,02receiptRelease"
                        default="01transfer" required="true"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:enum name="documentsStatus" values="01accepted,02draft"
                        default="01accepted" required="true"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:boolean name="warehouseIssuesReserveStates" default="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:boolean name="issuedQuantityUpToNeed" default="false"/>
        </model:model-field>

        <model:model-field model="parameter" plugin="basic">
            <model:enum name="materialCostsUsedMC"
                        values="01nominal,02average,03lastPurchase,04averageOfferCost,05lastOfferCost"
                        required="true" default="01nominal"/>
        </model:model-field>

        <model:model-field model="parameter" plugin="basic">
            <model:boolean name="useNominalCostPriceNotSpecifiedMC" default="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:belongsTo name="productAttribute" plugin="basic" model="attribute"/>
        </model:model-field>

        <model:model-field plugin="basic" model="attribute">
            <model:hasMany name="productAttributes" plugin="basic" model="parameter"
                           joinField="productAttribute"/>
        </model:model-field>

        <model:model-field plugin="basic" model="parameter">
            <model:belongsTo name="materialAttribute" plugin="basic" model="attribute"/>
        </model:model-field>

        <model:model-field plugin="basic" model="attribute">
            <model:hasMany name="materialAttributes" plugin="basic" model="parameter"
                           joinField="materialAttribute"/>
        </model:model-field>

        <model:model-field model="technology" plugin="technologies">
            <model:hasMany name="modelCardProducts"
                           plugin="productFlowThruDivision" model="modelCardProduct"
                           joinField="technology"/>
        </model:model-field>

        <model:model-field model="product" plugin="basic">
            <model:hasMany name="modelCardProducts"
                           plugin="productFlowThruDivision" model="modelCardProduct"
                           joinField="product"/>
        </model:model-field>

        <!-- productionCountingQuantity in -->

        <model:model-field plugin="basicProductionCounting"
                           model="productionCountingQuantity">
            <model:enum name="productionFlow" values="01warehouse,02withinTheProcess"/>
        </model:model-field>

        <model:model-field plugin="basicProductionCounting"
                           model="productionCountingQuantity">
            <model:belongsTo name="productsFlowLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basicProductionCounting"
                           model="productionCountingQuantity">
            <model:belongsTo name="componentsLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basicProductionCounting"
                           model="productionCountingQuantity">
            <model:belongsTo name="componentsOutputLocation"
                             model="location" plugin="materialFlow"/>
        </model:model-field>

        <!-- productionCountingQuantity out -->

        <model:model-field plugin="basicProductionCounting"
                           model="productionCountingQuantity">
            <model:belongsTo name="productsInputLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="basicProductionCounting"
                           model="productionCountingQuantity">
            <model:belongsTo name="wasteReceptionWarehouse" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <!-- hooks -->

        <model:model-hook plugin="technologies" model="technology">
            <model:validatesWith
                    class="com.qcadoo.mes.productFlowThruDivision.validators.TechnologyValidatorsPFTD"
                    method="checkRequiredFields"/>
        </model:model-hook>

        <model:model-hook plugin="basic" model="division">
            <model:validatesWith
                    class="com.qcadoo.mes.productFlowThruDivision.validators.DivisionValidatorsPFTD"
                    method="checkRequiredFields"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="operationProductInComponent">
            <model:validatesWith
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OperationProductComponentsHooksPFTD"
                    method="checkRequiredFields"/>
        </model:model-hook>
        <model:model-hook plugin="technologies" model="operationProductInComponent">
            <model:validatesWith
                    class="com.qcadoo.mes.productFlowThruDivision.validators.OPICValidatorsPFTD"
                    method="checkComponentsWarehouses"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="operationProductOutComponent">
            <model:validatesWith
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OperationProductComponentsHooksPFTD"
                    method="checkRequiredFields"/>
        </model:model-hook>


        <model:model-hook plugin="basicProductionCounting" model="productionCountingQuantity">
            <model:validatesWith
                    class="com.qcadoo.mes.productFlowThruDivision.validators.ProductionCountingQuantityValidatorsPFTD"
                    method="validate"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="technology">
            <model:onCreate
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.TechnologyHooksPFTD"
                    method="onCreate"/>
        </model:model-hook>

        <model:model-hook plugin="orders" model="order">
            <model:onCreate
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OrderHooksPFTD"
                    method="onCreate"/>
        </model:model-hook>

        <model:model-hook plugin="orders" model="order">
            <model:onSave
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OrderHooksPFTD"
                    method="onSave"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="technology">
            <model:onCopy
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.TechnologyHooksPFTD"
                    method="fillProductionFlow"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="operationProductInComponent">
            <model:onCreate
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OperationProductComponentsHooksPFTD"
                    method="fillProductionFlow"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="operationProductOutComponent">
            <model:onCreate
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OperationProductComponentsHooksPFTD"
                    method="fillProductionFlow"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="operationProductInComponent">
            <model:onCopy
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OperationProductComponentsHooksPFTD"
                    method="fillProductionFlow"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="operationProductOutComponent">
            <model:onCopy
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.OperationProductComponentsHooksPFTD"
                    method="fillProductionFlow"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="technology">
            <model:onSave
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.TechnologyHooksPFTD"
                    method="onSave"/>
        </model:model-hook>

        <model:model-hook plugin="technologies" model="technologyOperationComponent">
            <model:onSave
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.TechnologyOperationComponentHooksPFTD"
                    method="onSave"/>
        </model:model-hook>

        <model:model model="materialAvailability" resource="model/materialAvailability.xml"/>

        <model:model-field plugin="orders" model="order">
            <model:hasMany name="materialAvailability" plugin="productFlowThruDivision"
                           model="materialAvailability" joinField="order" cascade="delete"/>
        </model:model-field>

        <model:model-field plugin="orders" model="order">
            <model:hasMany name="materialAvailabilityDto" plugin="productFlowThruDivision"
                           model="materialAvailabilityDto" joinField="order" cascade="nullify" copyable="false"
                           persistent="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="product">
            <model:hasMany name="materialAvailability" plugin="productFlowThruDivision"
                           model="materialAvailability" joinField="product" cascade="delete"/>
        </model:model-field>

        <model:model model="operTaskMaterialAvailability" resource="model/operTaskMaterialAvailability.xml"/>
        <model:model model="operTaskMaterialAvailabilityDto" resource="model/operTaskMaterialAvailabilityDto.xml"/>

        <model:model-field plugin="orders" model="operationalTask">
            <model:hasMany name="operTaskMaterialAvailability" plugin="productFlowThruDivision"
                           model="operTaskMaterialAvailability" joinField="operationalTask" cascade="delete"/>
        </model:model-field>

        <model:model-field plugin="orders" model="operationalTask">
            <model:hasMany name="operTaskMaterialAvailabilityDto" plugin="productFlowThruDivision"
                           model="operTaskMaterialAvailabilityDto" joinField="operationalTask"
                           persistent="false"/>
        </model:model-field>

        <model:model-field plugin="basic" model="product">
            <model:hasMany name="operTaskMaterialAvailability" plugin="productFlowThruDivision"
                           model="operTaskMaterialAvailability" joinField="product" cascade="delete"/>
        </model:model-field>

        <model:model-hook plugin="basicProductionCounting"
                          model="productionCountingQuantity">
            <model:onCreate
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.ProductionCountingQuantityHooksBPC"
                    method="onCreate"/>
        </model:model-hook>

        <model:model-hook plugin="basic" model="parameter">
            <model:onCreate
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.ParameterHooksPFTD"
                    method="onCreate"/>
        </model:model-hook>

        <model:model-hook plugin="basic" model="parameter">
            <model:onSave
                    class="com.qcadoo.mes.productFlowThruDivision.hooks.ParameterHooksPFTD"
                    method="onSave"/>
        </model:model-hook>

        <!-- view -->

        <view:view-tab resource="view/tabExtensions/generalParameters.xml"/>
        <view:view-tab resource="view/tabExtensions/dashboardParameters.xml"/>
        <view:view-tab resource="view/tabExtensions/ordersParameters.xml"/>
        <view:view-tab resource="view/tabExtensions/supplyParameters.xml"/>
        <view:view-tab resource="view/tabExtensions/divisionDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/locationDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/technologyDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/orderMaterialAvailability.xml"/>
        <view:view-tab resource="view/tabExtensions/productionCountingQuantityAdvancedDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/orderDetails.xml"/>
        <view:view-tab resource="view/tabExtensions/trackingOperationProductInComponentDetailsResourcesTab.xml"/>

        <view:view-hook plugin="materialFlow" view="dashboardParameters"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.DashboardParametersHooksPDTD"
                        method="onBeforeRender"/>

        <view:view-hook plugin="basic" view="divisionDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.DivisionDetailsHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-hook plugin="deliveries" view="supplyParameters"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.SupplyParametersHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-hook plugin="materialFlow" view="locationDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.LocationDetailsPFTD"
                        method="setCriteriaModifierParameters"/>

        <view:view-hook plugin="materialFlowResources" view="documentsList"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.DocumentsListPFTD"
                        method="setCriteriaModifierParameters"/>

        <view:view-hook plugin="materialFlow" view="locationDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.LocationDetailsPFTD"
                        method="changeDivisionsTabAndGridVisibility"/>

        <view:view-hook plugin="technologies" view="technologyDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.TechnologyDetailsHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-hook plugin="orders" view="orderAdditionalDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.OrderDetailsHooksPFTD"
                        method="onBeforeRenderAdditionalForm"/>

        <view:view-hook plugin="orders" view="orderDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.OrderDetailsHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-hook plugin="basic" view="productDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.ProductDetailsHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-hook plugin="productionCounting" view="productionTrackingDetails"
                        type="beforeRender"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.ProductionTrackingDetailsHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-hook view="productionCountingQuantityAdvancedDetails" type="beforeRender"
                        plugin="basicProductionCounting"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.ProductionCountingQuantityAdvancedDetailsHooksBPC"
                        method="onBeforeRender"/>

        <view:view-hook view="detailedProductionCountingAndProgressList" type="beforeRender"
                        plugin="basicProductionCounting"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.DetailedProductionCountingAndProgressListHooksBPC"
                        method="onBeforeRender"/>

        <view:view-hook view="trackingOperationProductInComponentDetails" type="beforeRender"
                        plugin="productionCounting"
                        class="com.qcadoo.mes.productFlowThruDivision.hooks.TrackingOperationProductInComponentDetailsHooksPFTD"
                        method="onBeforeRender"/>

        <view:view-grid-column plugin="materialFlowResources"
                               view="documentsList" component="grid">
            <view:column name="orderNumber" fields="orderNumber" orderable="true"
                         searchable="true" width="100"/>
        </view:view-grid-column>

        <view:view-grid-column plugin="materialFlowResources"
                               view="documentPositionsList" component="grid">
            <view:column name="orderNumber" fields="orderNumber" orderable="true"
                         searchable="true" width="45"/>
        </view:view-grid-column>

        <view:view-grid-column view="ordersList" component="grid" plugin="orders">
            <view:column name="divisionName" fields="divisionName" orderable="true" searchable="true" width="55"/>
        </view:view-grid-column>

        <view:view-grid-column view="ordersPlanningList" component="grid" plugin="orders">
            <view:column name="divisionNumber" fields="divisionNumber" orderable="true" searchable="true" width="20"/>
        </view:view-grid-column>

        <view:view-grid-column plugin="materialFlowResources" view="reservationsList" component="grid">
            <view:column name="warehouseIssueNumber" fields="productsToIssue"
                         width="50" expression="#productsToIssue?.get('warehouseIssue')?.get('number')" orderable="true"
                         searchable="true"/>

        </view:view-grid-column>
        <custom:custom class="com.qcadoo.mes.productFlowThruDivision.ProductFlowThruDivisionOnStartupService"/>

        <view:view-ribbon-group resource="view/ribbonExtensions/productDetails.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/ordersPlanningList.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/orderDetails.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/operationalTaskDetails.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/technologyDetails.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/productionTrackingDetails.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/costNormsForMaterialsInOrderList.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/detailedProductionCountingAndProgressList.xml"/>
        <view:view-ribbon-group resource="view/ribbonExtensions/warehouseStocksList.xml"/>

        <view:view resource="view/orderProductResourceReservationRegisterDetails.xml"/>
        <view:view resource="view/orderWithMaterialAvailabilityList.xml"/>
        <view:view resource="view/ordersWithMaterialAvailabilityList.xml"/>
        <view:view resource="view/materialAvailabilityList.xml"/>
        <view:view resource="view/materialReplacementsAvailabilityList.xml"/>

        <view:view-listener plugin="costNormsForMaterials" view="costNormsForMaterialsInOrderList"
                            component="form" event="calculateRealProductionCost"
                            class="com.qcadoo.mes.productFlowThruDivision.realProductionCost.RealProductionCostService"
                            method="calculateRealProductionCost"/>

        <view:view-listener plugin="orders" view="orderDetails"
                            component="form" event="showMaterialAvailabilityForOrder"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.OrderDetailsListenersPFTD"
                            method="showMaterialAvailabilityForOrder"/>

        <view:view-listener plugin="orders" view="operationalTaskDetails"
                            component="form" event="showMaterialAvailabilityForOperationalTask"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.OperationalTaskListenersPFTD"
                            method="showMaterialAvailabilityForOperationalTask"/>

        <view:view-listener plugin="orders" view="ordersPlanningList"
                            component="grid" event="showMaterialAvailabilityForOrders"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.OrdersPlanningListListenersPFTD"
                            method="showMaterialAvailabilityForOrders"/>

        <view:view-listener plugin="basic" view="productDetails"
                            component="form" event="showProductAvailability"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.ProductDetailsListenersPFTD"
                            method="showProductAvailability"/>

        <view:view-listener plugin="productionCounting" view="productionTrackingDetails"
                            component="form" event="showMaterialAvailabilityForProductionTracking"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.OrderDetailsListenersPFTD"
                            method="showMaterialAvailabilityForProductionTracking"/>

        <view:view-listener plugin="technologies" view="technologyDetails"
                            component="form" event="fillLocationsInComponents"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.TechnologyDetailsListenersPFTD"
                            method="fillLocationsInComponents"/>

        <view:view-listener plugin="technologies" view="technologyDetails"
                            component="form" event="createModelCard"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.TechnologyDetailsListenersPFTD"
                            method="createModelCard"/>

        <view:view-listener plugin="technologies" view="technologyDetails"
                            component="form" event="addMultipleProductionLines"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.TechnologyDetailsListenersPFTD"
                            method="addMultipleProductionLines"/>

        <view:view-listener plugin="basicProductionCounting" view="productionCountingQuantityAdvancedDetails"
                            component="role" event="onSelectedEntityChange"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.ProductionCountingQuantityAdvancedDetailsListenersPFTD"
                            method="setFlowTabState"/>

        <view:view-listener plugin="basicProductionCounting" view="productionCountingQuantityAdvancedDetails"
                            component="typeOfMaterial" event="onSelectedEntityChange"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.ProductionCountingQuantityAdvancedDetailsListenersPFTD"
                            method="setFlowTabState"/>

        <view:view-listener plugin="basicProductionCounting" view="productionCountingQuantityAdvancedDetails"
                            component="technologyOperationComponent" event="onSelectedEntityChange"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.ProductionCountingQuantityAdvancedDetailsListenersPFTD"
                            method="setFlowTabState"/>


        <view:view-listener plugin="basicProductionCounting" view="detailedProductionCountingAndProgressList"
                            component="form" event="resourceIssue"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.DetailedProductionCountingAndProgressListenersBPC"
                            method="resourceIssue"/>

        <view:view resource="view/productionLineAddMulti.xml"/>

        <model:model-field plugin="technologies"
                           model="technology">
            <model:enum name="productionFlow" values="01warehouse,02withinTheProcess"
                        default="02withinTheProcess" required="true"/>
        </model:model-field>
        <model:model-field plugin="technologies"
                           model="technology">
            <model:belongsTo name="productsFlowLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies"
                           model="operationProductInComponent">
            <model:belongsTo name="productsFlowLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>
        <model:model-field plugin="technologies"
                           model="operationProductOutComponent">
            <model:belongsTo name="productsFlowLocation" model="location"
                             plugin="materialFlow"/>
        </model:model-field>

        <model:model-field plugin="technologies"
                           model="operationProductInComponent">
            <model:enum name="productionFlow" values="01warehouse,02withinTheProcess"
                        default="02withinTheProcess"/>
        </model:model-field>

        <model:model-field plugin="technologies"
                           model="operationProductOutComponent">
            <model:enum name="productionFlow" values="01warehouse,02withinTheProcess"
                        default="02withinTheProcess"/>
        </model:model-field>

        <view:view resource="view/productsComponentDetails.xml"/>
        <view:view resource="view/productsIntermediateInDetails.xml"/>
        <view:view resource="view/productsIntermediateOutDetails.xml"/>
        <view:view resource="view/productsFinalDetails.xml"/>
        <view:view resource="view/productToIssueDetails.xml"/>
        <view:view resource="view/issueList.xml"/>
        <view:view resource="view/wasteFlowDetails.xml"/>

        <!--  warehouseIssue -->

        <model:model-field plugin="states" model="message">
            <model:belongsTo name="warehouseIssueStateChange"
                             plugin="productFlowThruDivision" model="warehouseIssueStateChange"/>
        </model:model-field>

        <model:model model="warehouseIssue" resource="model/warehouseIssue.xml"/>
        <model:model model="productsToIssue" resource="model/productsToIssue.xml"/>
        <model:model model="productToIssueDto" resource="model/productToIssueDto.xml"/>
        <model:model model="issue" resource="model/issue.xml"/>
        <model:model model="issueDto" resource="model/issueDto.xml"/>
        <model:model model="warehouseIssueStateChange" resource="model/warehouseIssueStateChange.xml"/>
        <model:model model="productsToIssueHelper" resource="model/productsToIssueHelper.xml"/>
        <model:model model="productToIssueCorrection" resource="model/productToIssueCorrection.xml"/>
        <model:model model="productToIssueCorrectionHelper" resource="model/productToIssueCorrectionHelper.xml"/>
        <model:model model="productAndQuantityHelper" resource="model/productAndQuantityHelper.xml"/>
        <model:model model="materialAvailabilityDto" resource="model/materialAvailabilityDto.xml"/>
        <model:model model="plannedConsumptionInOrderDto" resource="model/plannedConsumptionInOrderDto.xml"/>

        <menu:menu-category name="requirements"/>

        <view:view resource="view/warehouseIssueDetails.xml"/>
        <view:view resource="view/productsToIssueList.xml"/>

        <view:view resource="view/warehouseIssueList.xml"/>
        <view:view resource="view/issueDetails.xml"/>

        <view:view resource="view/productsToIssueHelperDetails.xml"/>
        <view:view resource="view/productToIssueCorrectionHelperDetails.xml"/>
        <view:view resource="view/modelCardsList.xml"/>
        <view:view resource="view/modelCardDetails.xml"/>
        <view:view resource="view/modelCardProductDetails.xml"/>
        <view:view resource="view/plannedConsumptionInOrderList.xml"/>
        <view:view resource="view/operTaskWithMaterialAvailabilityList.xml"/>

        <menu:menu-item name="warehouseIssue" category="requirements"
                        view="warehouseIssueList" defaultAuthorizationRole="ROLE_REQUIREMENTS"/>

        <menu:menu-item name="productsToIssue" category="requirements"
                        view="productsToIssueList" defaultAuthorizationRole="ROLE_REQUIREMENTS"/>
        <menu:menu-item name="issueList" category="requirements"
                        view="issueList" defaultAuthorizationRole="ROLE_REQUIREMENTS"/>
        <menu:menu-item name="modelCardsList" category="products" defaultAuthorizationRole="ROLE_PRODUCTS_ADDITIONAL"
                        view="modelCardsList"/>

        <view:view-listener plugin="orders" view="orderDetails"
                            component="form" event="showWarehouseIssuesForOrder"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.OrderDetailsListenersPFTD"
                            method="showWarehouseIssuesForOrder"/>

        <view:view-listener plugin="materialFlowResources" view="warehouseStocksList"
                            component="grid" event="showPlannedConsumptionInOrders"
                            class="com.qcadoo.mes.productFlowThruDivision.listeners.WarehouseStocksListListenersPFTD"
                            method="showPlannedConsumptionInOrders"/>

        <view:view-hook view="warehouseStocksList" type="beforeRender"
                        plugin="materialFlowResources"
                        class="com.qcadoo.mes.productFlowThruDivision.listeners.WarehouseStocksListListenersPFTD"
                        method="onBeforeRender"/>

    </modules>

    <features>
        <end-user/>
    </features>
</plugin>
