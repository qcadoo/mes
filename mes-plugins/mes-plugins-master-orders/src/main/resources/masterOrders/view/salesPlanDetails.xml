<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_SALE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="salesPlanDetails" modelName="salesPlan">

    <component type="window" name="window" reference="window">

        <ribbon>
            <template name="standardFormTemplate"/>
            <group name="status">
                <smallButton name="complete" icon="acceptIcon16.png" state="enabled"
                             action="#{form}.changeState(complete);"/>
                <smallButton name="reject" icon="deleteIcon16.png" state="enabled"
                             action="#{form}.changeState(reject);"/>
            </group>
            <group name="import">
                <bigButton name="openPositionsImportPage" state="enabled" icon="xlsIcon24.png"
                           action="#{form}.fireEvent(openPositionsImportPage);"/>
            </group>
            <group name="products">
                <bigButton name="addProductsBySize" icon="newIcon24.png"
                             state="enabled" action="#{form}.fireEvent(addProductsBySize);">
                </bigButton>
                <bigButton name="getOrderedQuantities" icon="generateIcon24.png"
                           state="enabled" action="#{form}.fireEvent(getOrderedQuantities);">
                </bigButton>
                <bigButton name="showOrderedProductsForFamily" icon="genealogyIcon24.png"
                           state="enabled" action="#{form}.fireEvent(showOrderedProductsForFamily);">
                </bigButton>
            </group>
            <group name="orders">
                <bigButton name="createOrderGroup" icon="generateIcon24.png"
                           state="enabled" action="#{form}.fireEvent(createOrderGroup);">
                </bigButton>
                <bigButton name="createOrders" icon="generateIcon24.png"
                           state="enabled" action="#{form}.fireEvent(createOrders);">
                </bigButton>
            </group>
            <group name="salesPlanMaterialRequirement" defaultAuthorizationRole="ROLE_REQUIREMENTS">
                <bigButton name="createSalesPlanMaterialRequirement" icon="genealogyIcon24.png"
                           state="disabled" action="#{form}.fireEvent(createSalesPlanMaterialRequirement);">
                </bigButton>
            </group>
            <group name="technologies">
                <bigButton name="useOtherTechnology" icon="genealogyIcon24.png"
                           state="disabled" action="#{form}.fireEvent(useOtherTechnology);">
                </bigButton>
                <bigButton name="fillTechnology" icon="genealogyIcon24.png"
                           state="disabled" action="#{form}.fireEvent(fillTechnology);">
                </bigButton>
            </group>
        </ribbon>

        <windowTab name="mainTab">
            <component type="form" name="salesPlan" reference="form">
                <script>
                    QCD = QCD || {};
                    QCD.translations = QCD.translations || {};

                    QCD.translations['masterOrders.salesPlan.status.differentStates'] =
                    '#{translate(masterOrders.salesPlan.status.differentStates)}';
                    QCD.translations['masterOrders.salesPlan.status.confirm.complete'] =
                    '#{translate(masterOrders.salesPlan.status.confirm.complete)}';
                    QCD.translations['masterOrders.salesPlan.status.complete'] =
                    '#{translate(masterOrders.salesPlan.status.complete)}';
                    QCD.translations['masterOrders.salesPlan.status.confirm.reject'] =
                    '#{translate(masterOrders.salesPlan.status.confirm.reject)}';
                    QCD.translations['masterOrders.salesPlan.status.reject'] =
                    '#{translate(masterOrders.salesPlan.status.reject)}';


                </script>
                <script type="text/javascript" src="/masterOrders/public/js/salesPlan.js"></script>
                <script type="text/javascript" src="/masterOrders/public/js/salesPlan_form.js"></script>

                <component type="gridLayout" name="gridLayout" columns="3"
                           rows="6">
                    <layoutElement column="1" row="1">
                        <component type="input" name="number" reference="number"
                                   field="number" defaultEnabled="never">
                            <option type="alignment" value="right"/>
                        </component>
                        <component type="select" name="state" field="state"
                                   reference="state" defaultVisible="false"/>
                    </layoutElement>
                    <layoutElement column="1" row="2">
                        <component type="input" name="name" field="name"
                                   reference="name"/>
                    </layoutElement>
                    <layoutElement column="1" row="3" height="2">
                        <component type="textarea" name="description" field="description"
                                   reference="description"/>
                    </layoutElement>
                    <layoutElement column="1" row="5">
                        <component type="calendar" name="dateFrom" reference="dateFrom"
                                   field="dateFrom">
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="6">
                        <component type="calendar" name="dateTo" reference="dateTo"
                                   field="dateTo">
                        </component>
                    </layoutElement>
                </component>

                <option type="header" value="true"/>
                <option type="expression"
                        value="#number + ' - ' + '@masterOrders.salesPlan.state.value.' + #state"/>

                <listener event="addProductsBySize" method="addProductsBySize"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"/>
                <listener event="getOrderedQuantities" method="getOrderedQuantities"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"/>
                <listener event="showOrderedProductsForFamily" method="showOrderedProductsForFamily"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"/>
                <listener event="createSalesPlanMaterialRequirement" method="createSalesPlanMaterialRequirement"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"/>
                <listener event="createOrderGroup" method="createOrderGroup"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"/>
                <listener event="createOrders" method="createOrders"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"/>
                <listener event="changeState" class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"
                          method="changeState"/>
                <listener event="openPositionsImportPage"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"
                          method="openPositionsImportPage"/>
                <listener event="useOtherTechnology"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"
                          method="useOtherTechnology"/>
                <listener event="fillTechnology"
                          class="com.qcadoo.mes.masterOrders.listeners.SalesPlanDetailsListeners"
                          method="fillTechnology"/>
            </component>
        </windowTab>

        <windowTab name="productsTab">
            <component type="grid" name="products" useDto="true" source="#{form}.productsDto"
                       reference="products" model="salesPlanProductDto">
                <script>
                    <![CDATA[
                    this.addOnChangeListener({
						onChange: function(selectedEntitiesArray) {
							if (selectedEntitiesArray && selectedEntitiesArray.length == 1
							    && selectedEntitiesArray[0].fields.productEntityType == "02productsFamily") {
								#{window}.getRibbonItem("products.showOrderedProductsForFamily").enable();
							} else {
								#{window}.getRibbonItem("products.showOrderedProductsForFamily").disable();
							}
						}
					});
				]]>
                </script>
                <option type="column" name="productNumber" fields="productNumber" link="true" width="100"/>
                <option type="column" name="productName" fields="productName" link="true" width="100"/>
                <option type="column" name="productEntityType" fields="productEntityType" width="50"/>
                <option type="column" name="productFamily" fields="productFamily" width="60"/>
                <option type="column" name="productModel" fields="productModel" width="60"/>
                <option type="column" name="productAssortment" fields="productAssortment" width="60"/>
                <option type="column" name="technologyNumber" fields="technologyNumber" width="60"/>
                <option type="column" name="plannedQuantity" fields="plannedQuantity" width="40"/>
                <option type="column" name="orderedQuantity" fields="orderedQuantity" width="40"/>
                <option type="column" name="orderedToWarehouse" fields="orderedToWarehouse" width="40"/>
                <option type="column" name="surplusFromPlan" fields="surplusFromPlan" width="40"/>
                <option type="column" name="ordersPlannedQuantity" fields="ordersPlannedQuantity" width="40"/>
                <option type="column" name="productUnit" fields="productUnit" width="30"/>

                <option type="order" column="productNumber" direction="asc"/>

                <option type="searchable"
                        value="productNumber,productName,productEntityType,productFamily,productModel,productAssortment,technologyNumber,plannedQuantity,productUnit,orderedQuantity,orderedToWarehouse,surplusFromPlan,ordersPlannedQuantity"/>
                <option type="orderable"
                        value="productNumber,productName,productEntityType,productFamily,productModel,productAssortment,technologyNumber,plannedQuantity,productUnit,orderedQuantity,orderedToWarehouse,surplusFromPlan,ordersPlannedQuantity"/>

                <listener event="onSelect"
                          class="com.qcadoo.view.api.listeners.RerenderListener"
                          method="onChangeRerender"/>

                <option type="correspondingView" value="masterOrders/salesPlanProductDetails"/>
                <option type="correspondingComponent" value="form"/>
                <option type="correspondingViewInModal" value="true"/>

                <option type="footerRow" value="true"/>
                <option type="columnsToSummary" value="plannedQuantity,orderedQuantity,orderedToWarehouse,surplusFromPlan,ordersPlannedQuantity"/>

                <option type="fixedHeight" value="true"/>
                <option type="multiselect" value="true"/>
                <option type="deletable" value="true"/>
                <option type="creatable" value="true"/>
                <option type="selectableWhenDisabled" value="true"/>
            </component>
        </windowTab>

    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.masterOrders.hooks.SalesPlanDetailsHooks"
                method="onBeforeRender"/>
    </hooks>

</view>
