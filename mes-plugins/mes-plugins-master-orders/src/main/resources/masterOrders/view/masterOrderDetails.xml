<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_SALE" name="masterOrderDetails" modelName="masterOrder"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

    <component type="window" name="window" reference="window">

        <ribbon>
            <group name="navigation">
                <bigButton name="back" icon="backIcon24.png" state="enabled" action="#{window}.performBack"/>
            </group>

            <group name="actions" defaultAuthorizationRole="ROLE_PLANNING_MASTER_ORDERS">
                <bigButton name="save" icon="saveIcon24.png" state="enabled" action="#{form}.performSave;"
                           accesskey="s"/>
                <smallButton name="saveBack" icon="saveBackIcon16.png" state="enabled"
                             action="#{form}.performSave; #{window}.performBack;"/>
                <smallButton name="saveNew" icon="saveNewIcon16.png" state="enabled"
                             action="#{form}.performSaveAndClear;"/>
                <smallButton name="copy" icon="copyIcon16.png" state="disabled" action="#{form}.performCopy;"
                             accesskey="c">
                    <script>
                        <![CDATA[
                            #{form}.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (!value || !value.content)
                                        return;
                                    if (value.content.entityId) {
                                        this.enable();
                                    } else {
                                        this.disable();
                                    }
                                }
                            });
                        ]]>
                    </script>
                </smallButton>
                <smallButton name="delete" icon="deleteIcon16.png" state="disabled" action="#{form}.performDelete;"
                             accesskey="d">
                    <script>
                        <![CDATA[
                            #{form}.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (!value || !value.content)
                                        return;
                                    if (value.content.entityId) {
                                        this.enable();
                                    } else {
                                        this.disable();
                                    }
                                }
                            });
                        ]]>
                    </script>
                </smallButton>
            </group>

            <group name="commonActions">
                <bigButton name="refresh" icon="updateIcon24.png" state="enabled" action="#{form}.performRefresh;"
                           accesskey="r"/>
            </group>

            <group name="states" if="#view.getComponentByReference('form').dataDefinition.activable">
                <smallButton name="activate" icon="unactiveVisibleIcon.png" state="disabled"
                             action="#{form}.performActivate;">
                    <script>
                        <![CDATA[
                            #{form}.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (!value || !value.content)
                                        return;
                                    if (value.content.entityId && !value.content.isActive) {
                                        this.enable();
                                    } else {
                                        this.disable();
                                    }
                                }
                            });
                        ]]>
                    </script>
                </smallButton>
                <smallButton name="deactivate" icon="unactiveNotVisibleIcon.png" state="disabled"
                             action="#{form}.performDeactivate;">
                    <script>
                        <![CDATA[
                            #{form}.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (!value || !value.content)
                                        return;
                                    if (value.content.entityId && value.content.isActive) {
                                        this.enable();
                                    } else {
                                        this.disable();
                                    }
                                }
                            });
                        ]]>
                    </script>
                </smallButton>
            </group>

            <group name="status">
                <smallButton name="completeMasterOrder" icon="acceptIcon16.png"
                             state="disabled">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(masterOrders.masterOrderDetails.window.ribbon.status.completeMasterOrder.confirm)}")) {
										#{form}.performEvent('changeState', ['03completed']);
									};
								}
							});
						]]>
                    </script>
                </smallButton>
                <smallButton name="declineMasterOrder" icon="deleteIcon16.png"
                             state="disabled">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(masterOrders.masterOrderDetails.window.ribbon.status.declineMasterOrder.confirm)}")) {
										#{form}.performEvent('changeState', ['04declined']);
									};
								}
							});
						]]>
                    </script>
                </smallButton>
            </group>

            <group name="sizeActions">
                <bigButton name="addProductsBySize" icon="newIcon24.png">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.canClose()) {
										#{form}.performEvent('addProductsBySize', []);
									}
								}
							});

							#{form}.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (!value || !value.content)
                                        return;
                                    if (value.content.entityId) {
                                        this.enable();
                                    } else {
                                        this.disable();
                                    }
                                }
                            });
						]]>
                    </script>
                </bigButton>
                <bigButton name="addProductsByAttribute" icon="newIcon24.png">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if(window.canClose()) {
										#{form}.performEvent('addProductsByAttribute', []);
									}
								}
							});

							#{form}.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (!value || !value.content)
                                        return;
                                    if (value.content.entityId) {
                                        this.enable();
                                    } else {
                                        this.disable();
                                    }
                                }
                            });
						]]>
                    </script>
                </bigButton>
            </group>

            <group name="orders" defaultAuthorizationRole="ROLE_PLANNING_ORDERS">
                <bigButton name="createOrder" icon="generateIcon24.png">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if(window.canClose()) {
										#{form}.performEvent('createOrder', []);
									}
								}
							});	
						]]>
                    </script>
                </bigButton>

                <bigButton name="generateOrders" icon="generateIcon24.png" state="enabled">
                    <script>
                        <![CDATA[
                            this.addOnChangeListener({
                                onClick: function() {
                                    if (window.canClose()) {
                                        #{form}.performEvent('generateOrders', []);
                                    }
                                }
                            });
                        ]]>
                    </script>
                </bigButton>
            </group>

            <group name="documents" defaultAuthorizationRole="ROLE_PLANNING_ORDERS">
                <bigButton name="createReleaseDocument" icon="generateIcon24.png">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.canClose()) {
								        #{form}.performEvent('createReleaseDocument', []);
									}
								}
							});
						]]>
                    </script>
                </bigButton>
            </group>
        </ribbon>

        <windowTab name="mainTab">
            <component type="form" name="masterOrderDetails" reference="form">
                <script>
                    <![CDATA[
                       	var completeMasterOrder = #{window}.getRibbonItemOrNull("status.completeMasterOrder");
    					var declineMasterOrder = #{window}.getRibbonItemOrNull("status.declineMasterOrder");

                        this.addOnChangeListener({
						    onSetValue: function(value) {
                                if (! value || ! value.content) {
                                    return;
                                }

                                if (! value.content.entityId) {
                                    return;
                                }

                                var state = #{state}.getValue().content.value;
                                if (!state) {
                                    return;
                                }

                                if (state == "01new") {
                                    completeMasterOrder.enable();
                                    declineMasterOrder.enable();
                                } else if (state == "02inExecution") {
                                    completeMasterOrder.enable();
                                    declineMasterOrder.disable();
                                } else if (state == "03completed") {
                                    completeMasterOrder.disable();
                                    declineMasterOrder.disable();
                                } else if (state == "04declined") {
                                    completeMasterOrder.disable();
                                    declineMasterOrder.disable();
                                }
						    }
					    });
                    ]]>
                </script>

                <component type="gridLayout" name="gridLayout" columns="3"
                           rows="8">
                    <layoutElement column="1" row="1">
                        <component type="lookup" name="masterOrderDefinition" reference="masterOrderDefinition"
                                   field="#{form}.masterOrderDefinition">
                            <option type="column" name="name" fields="name" link="true"
                                    width="100"/>

                            <option type="searchable" value="name"/>
                            <option type="orderable" value="name"/>

                            <option type="expression"
                                    value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="2">
                        <component type="input" name="number" field="number"
                                   reference="number">
                            <option type="alignment" value="right"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="3" height="2">
                        <component type="textarea" name="name" field="name"
                                   reference="name"/>
                    </layoutElement>
                    <layoutElement column="1" row="5" height="2">
                        <component type="textarea" name="description" field="description"
                                   reference="description"/>
                    </layoutElement>
                    <layoutElement column="1" row="7">
                        <component type="lookup" name="salesPlan" reference="salesPlan"
                                   field="#{form}.salesPlan">
                            <option type="column" name="name" fields="name" link="true"
                                    width="100"/>

                            <option type="searchable" value="name"/>
                            <option type="orderable" value="name"/>

                            <option type="expression"
                                    value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <criteriaModifier
                                    class="com.qcadoo.mes.masterOrders.criteriaModifier.SalesPlanCriteriaModifier"
                                    method="showOnlyDrafts"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="8">
                        <component type="checkbox" name="warehouseOrder"
                                   field="warehouseOrder" reference="warehouseOrder"
                                   hasDescription="true">
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="1">
                        <component type="checkbox" name="addMasterPrefixToNumber"
                                   field="addMasterPrefixToNumber" reference="addMasterPrefixToNumber">
                            <option type="labelWidth" value="60"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="2">
                        <component type="lookup" name="company" reference="company"
                                   field="company" hasDescription="true">
                            <option type="column" name="name" fields="name" link="true"/>
                            <option type="column" name="contractorCategory" fields="contractorCategory" link="true"/>

                            <option type="searchable" value="name,number,contractorCategory"/>
                            <option type="orderable" value="name,number,contractorCategory"/>

                            <option type="expression"
                                    value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                            <option type="labelWidth" value="40"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                                      method="clearAddress"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="3">
                        <component type="select" reference="companyCategory" name="companyCategory"
                                   field="companyCategory" defaultEnabled="never">
                            <option type="labelWidth" value="40"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="4">
                        <component type="lookup" name="address" reference="address"
                                   field="address" source="#{company}.addresses">
                            <option type="column" fields="name" name="name" link="true"/>
                            <option type="column" fields="addressType" name="addressType" link="true"/>

                            <option type="searchable" value="number,name,addressType"/>
                            <option type="orderable" value="number,name,addressType"/>

                            <option type="expression" value="(#name == null) ? #number : #number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <option type="labelWidth" value="40"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="5">
                        <component type="lookup" name="companyPayer" reference="companyPayer"
                                   field="companyPayer" hasDescription="true">
                            <option type="column" name="name" fields="name" link="true"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression"
                                    value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                            <option type="labelWidth" value="40"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                                      method="clearAddress"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="6">
                        <component type="select" name="masterOrderState"
                                   reference="masterOrderState" field="masterOrderState">
                            <option type="labelWidth" value="40"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="7">
                        <component type="select" name="state" field="state"
                                   reference="state" defaultVisible="false">
                            <option type="labelWidth" value="40"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="3" row="1">
                        <component type="calendar" name="deadline" field="deadline"
                                   reference="deadline" hasDescription="true">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="3" row="2">
                        <component type="calendar" name="startDate" field="startDate"
                                   reference="startDate">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="3" row="3">
                        <component type="calendar" name="finishDate" field="finishDate"
                                   reference="finishDate">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="3" row="4">
                        <component type="calendar" name="dateOfReceipt" field="dateOfReceipt"
                                   reference="dateOfReceipt">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="3" row="5">
                        <component type="calendar" name="createDate" reference="createDate" field="createDate"
                                   defaultEnabled="never">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                </component>

                <option type="header" value="true"/>
                <option type="expression" value="#number + ' - ' + '@masterOrders.masterOrderDto.state.value.' + #state"/>

                <listener event="addProductsBySize"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="addProductsBySize"/>

                <listener event="addProductsByAttribute"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="addProductsByAttribute"/>

                <listener event="createOrder"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="createOrder"/>

                <listener event="generateOrders"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="generateOrders"/>

                <listener event="createReleaseDocument"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="createReleaseDocument"/>

                <listener event="changeState"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="changeState"/>
            </component>
        </windowTab>

        <windowTab name="productsTab">
            <component type="grid" name="masterOrderProducts" useDto="true" source="#{form}.masterOrderProductsDto"
                       model="masterOrderPositionDto" reference="masterOrderProducts"
                       defaultAuthorizationRole="ROLE_PLANNING_MASTER_ORDERS">
                <option type="column" name="productNumber" fields="productNumber"
                        link="true"  width="100"/>
                <option type="column" name="productName" fields="productName"
                        link="true" width="120"/>
                <option type="column" name="technologyName" fields="technologyName"
                         width="100"/>
                <option type="column" name="masterOrderPositionStatus"
                        fields="masterOrderPositionStatus" width="100"/>
                <option type="column" name="comments"
                        fields="comments" width="100"/>
                <option type="column" name="masterOrderQuantity"
                        fields="masterOrderQuantity" width="60"/>
                <option type="column" name="cumulatedOrderQuantity"
                        fields="cumulatedMasterOrderQuantity" width="60"/>
                <option type="column" name="leftToRelease"
                        fields="leftToRelease" width="60"/>
                <option type="column" name="quantityTakenFromWarehouse" fields="quantityTakenFromWarehouse" width="45"/>
                <option type="column" name="warehouseMinimumStateQuantity" fields="warehouseMinimumStateQuantity" width="45"/>
                <option type="column" name="quantityRemainingToOrder" fields="quantityRemainingToOrder" width="45"/>
                <option type="column" name="producedOrderQuantity"
                        fields="producedOrderQuantity" width="60"
                        classesCondition="Number(rowObject['producedOrderQuantity']) >= Number(rowObject['masterOrderQuantity'])"
                        classesNames="green-cell"/>
                <option type="column" name="unit" fields="unit"
                         width="60"/>
                <option type="column" name="price" fields="price"
                        width="60"/>
                <option type="column" name="assortmentName" fields="assortmentName"
                        width="120"/>
                <option type="column" name="modelName"
                        fields="modelName" width="60"/>

                <option type="order" column="number" direction="asc"/>

                <option type="searchable"
                        value="productNumber,productName,technologyName,masterOrderPositionStatus,comments,quantityRemainingToOrder,quantityTakenFromWarehouse,masterOrderQuantity,cumulatedOrderQuantity,leftToRelease,producedOrderQuantity,unit,assortmentName,modelName,warehouseMinimumStateQuantity,price"/>
                <option type="orderable"
                        value="productNumber,productName,technologyName,masterOrderPositionStatus,comments,quantityRemainingToOrder,quantityTakenFromWarehouse,masterOrderQuantity,cumulatedOrderQuantity,leftToRelease,producedOrderQuantity,unit,assortmentName,modelName,warehouseMinimumStateQuantity,price"/>

                <option type="correspondingView" value="masterOrders/masterOrderProductDetails"/>
                <option type="correspondingComponent" value="form"/>
                <option type="correspondingViewInModal" value="true"/>

                <option type="deletable" value="true"/>
                <option type="creatable" value="true"/>
                <option type="multiselect" value="true"/>
                <option type="fullscreen" value="true"/>
                <option type="fixedHeight" value="true"/>

                <option type="footerRow" value="true"/>
                <option type="columnsToSummary"
                        value="masterOrderQuantity,cumulatedOrderQuantity,producedOrderQuantity,leftToRelease,quantityRemainingToOrder,quantityTakenFromWarehouse"/>

                <listener event="onSelectedEntityChange"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"
                          method="onProductsChange"/>
            </component>
        </windowTab>

        <windowTab name="ordersTab">
            <component type="lookup" name="ordersLookup" reference="ordersLookup"
                       field="#{form}.orders" defaultVisible="false" persistent="false"
                       hasLabel="false">
                <option type="column" name="name" fields="name" link="true"/>

                <option type="searchable" value="number,name"/>
                <option type="orderable" value="number,name"/>

                <option type="expression" value="#number + ' - ' + #name"/>
                <option type="fieldCode" value="number"/>

                <option type="multiselect" value="true"/>

                <criteriaModifier
                        class="com.qcadoo.mes.masterOrders.criteriaModifier.OrderCriteriaModifier"
                        method="filterByMasterOrderNumber"/>
            </component>

            <component type="grid" name="orders" useDto="true" source="#{form}.ordersDto"
                       model="orderListDto" reference="orders" plugin="orders"
                       defaultAuthorizationRole="ROLE_PLANNING_MASTER_ORDERS">
                <option type="column" name="number" fields="number" link="true"/>
                <option type="column" name="productNumber" fields="productNumber"
                       link="true"/>
                <option type="column" name="technologyNumber" fields="technologyNumber"
                       link="true"/>
                <option type="column" name="plannedQuantity" fields="plannedQuantity"/>
                <option type="column" name="doneQuantity" fields="doneQuantity"/>
                <option type="column" name="unit" fields="unit"/>
                <option type="column" name="state" fields="state"/>
                <option type="column" name="startDate" fields="startDate"/>
                <option type="column" name="finishDate" fields="finishDate"/>
                <option type="column" name="deadline" fields="deadline"/>

                <option type="order" column="number" direction="asc"/>

                <option type="searchable"
                        value="number,productNumber,technologyNumber,plannedQuantity,doneQuantity,unit,state,startDate,finishDate,deadline"/>
                <option type="orderable"
                        value="number,productNumber,technologyNumber,plannedQuantity,doneQuantity,unit,state,startDate,finishDate,deadline"/>

                <option type="weakRelation" value="true"/>
                <option type="correspondingLookup" value="ordersLookup"/>

                <option type="correspondingView" value="orders/orderDetails"/>
                <option type="correspondingComponent" value="form"/>
                <option type="correspondingViewInModal" value="false"/>

                <option type="fixedHeight" value="true"/>
                <option type="multiselect" value="true"/>
                <option type="deletable" value="true"/>

                <option type="creatable" value="true"/>

                <listener event="addExistingEntity"
                          method="onAddExistingEntity"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"/>

                <listener event="remove"
                          method="onRemoveSelectedEntity"
                          class="com.qcadoo.mes.masterOrders.listeners.MasterOrderDetailsListeners"/>
            </component>
        </windowTab>

        <windowTab name="integrationTab">
            <component type="gridLayout" name="gridLayoutIntegration"
                       reference="gridLayoutIntegration" columns="3" rows="6">
                <layoutElement column="1" row="1">
                    <component type="input" name="externalNumber" field="#{form}.externalNumber"
                               reference="externalNumber" defaultEnabled="never">
                        <option type="alignment" value="right"/>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="2">
                    <component type="checkbox" name="synchronize" field="#{form}.synchronize"
                               reference="synchronize" defaultEnabled="never">
                    </component>
                </layoutElement>
                <layoutElement column="1" row="3">
                    <component type="calendar" name="synchronizationDate" field="#{form}.synchronizationDate"
                               reference="synchronizationDate" defaultEnabled="never">
                        <option type="withTimePicker" value="true"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>

    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.masterOrders.hooks.MasterOrderDetailsHooks"
                method="onBeforeRender"/>
    </hooks>

</view>
