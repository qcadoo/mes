<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view name="salesPlanProductsImport" modelName="salesPlan" menuAccessible="true"
	  defaultAuthorizationRole="ROLE_SALE"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns="http://schema.qcadoo.org/view"
	  xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

	<component type="window" name="window" reference="window">
		<ribbon>
			<template name="standardFormTemplate" includeItems="navigation.back"/>
			<group name="import">
				<bigButton name="processImportFile" icon="sendIcon24.png" state="enabled">
					<script>
						<![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									#{form}.performEvent('processImportFile', []);
								}
							});

                            #{form}.addOnChangeListener({
					            onSetValue: function(value) {
								    var imported = #{imported}.getValue().content.value;

                                    if (imported && imported == true) {
									    #{window}.performBackWithoutConfirm();
								    }
						        }
					        });
						]]>
					</script>
				</bigButton>
				<bigButton name="downloadImportSchema" icon="downloadIcon24.png" state="enabled"
						   action="#{form}.fireEvent(downloadImportSchema);"/>
				<bigButton name="redirectToLogs" icon="warningIcon24.png" state="disabled"
						   action="#{form}.fireEvent(redirectToLogs);"/>
			</group>
		</ribbon>

		<component type="form" name="import" reference="form">
			<component type="gridLayout" name="gridLayout" columns="3"
					   rows="2">
				<layoutElement column="1" row="1" width="2">
					<component type="checkbox" name="imported" reference="imported">
						<script>
							<![CDATA[
                                this.setVisible(false);
                            ]]>
						</script>
					</component>
					<component type="file" name="importFile" reference="importFile" hasDescription="true">
						<script>
							<![CDATA[
                            	this.setEnabled(true, true);
                        	]]>
						</script>

						<listener event="onInputChange"
								  class="com.qcadoo.mes.masterOrders.listeners.SalesPlanProductsImportListeners"
								  method="onInputChange"/>
					</component>
				</layoutElement>
				<layoutElement column="1" row="2" width="2">
					<component type="checkbox" name="shouldUpdate" reference="shouldUpdate">
						<option type="labelWidth" value="80"/>
						<option type="align" value="right"/>
					</component>
				</layoutElement>
			</component>

			<listener event="processImportFile"
					  class="com.qcadoo.mes.masterOrders.listeners.SalesPlanProductsImportListeners"
					  method="processImportFile"/>
			<listener event="downloadImportSchema"
					  class="com.qcadoo.mes.masterOrders.listeners.SalesPlanProductsImportListeners"
					  method="downloadImportSchema"/>
			<listener event="redirectToLogs"
					  class="com.qcadoo.mes.masterOrders.listeners.SalesPlanProductsImportListeners"
					  method="redirectToLogs"/>

			<option type="header" value="false"/>
		</component>
	</component>

</view>