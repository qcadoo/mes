<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_SALE" name="salesPlanOrders" modelName="salesPlanOrdersGroupHelper"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

    <component type="window" name="window" reference="window">

        <ribbon>
            <group name="navigation">
                <bigButton name="back" icon="backIcon24.png" state="enabled" action="#{window}.performBackWithoutConfirm" />
            </group>
            <group name="action">
                <bigButton name="generateOrders" icon="generateIcon24.png" state="enabled">
                    <script>
                        <![CDATA[
                            var back = #{window}.getRibbonItem("navigation.back");
                            var generateOrders = #{window}.getRibbonItem("action.generateOrders");
                            this.addOnChangeListener({
                                onClick: function() {
                                    back.disable();
                                    generateOrders.disable();
                                    #{salesPlanOrdersEntryHelpers}.generateOrders();
                                }
                            });
                        ]]>
                    </script>
                </bigButton>
            </group>
        </ribbon>

        <windowTab name="mainTab">
            <component type="form" name="salesPlanOrdersForm" reference="form">
                <component type="gridLayout" name="gridLayout" columns="1"
                           rows="1">
                    <layoutElement column="1" row="1">
                        <component type="grid" name="salesPlanOrdersEntryHelpers" reference="salesPlanOrdersEntryHelpers"
                                   source="#{form}.salesPlanOrdersGroupEntryHelpers">
                            <script>
                                QCD = QCD || {};
                                QCD.translations = QCD.translations || {};

                                QCD.translations['masterOrders.productsBySize.productNotSelectedOrPositionsNotFilled'] =
                                '#{translate(masterOrders.productsBySize.productNotSelectedOrPositionsNotFilled)}';

                                QCD.translations['masterOrders.productsBySize.invalidScale.max'] =
                                '#{translate(masterOrders.productsBySize.invalidScale.max)}';

                                QCD.translations['masterOrders.productsBySize.invalidPrecision.max'] =
                                '#{translate(masterOrders.productsBySize.invalidPrecision.max)}';
                            </script>
                            <script type="text/javascript" src="/masterOrders/public/js/salesPlanOrders.js"></script>


                            <option type="column" name="productFamily" fields="productFamily"
                                    expression="#productFamily['number']"/>

                            <option type="column" name="product" fields="product"
                                    expression="#product['number']"/>

                            <option type="column" name="size" fields="product"
                                    expression="#product['size']?.get('number')"/>


                            <option type="column" name="succession" fields="product"
                                    expression="#product['size']?.get('succession')" hidden="true"/>


                            <option type="column" name="plannedQuantity" fields="plannedQuantity"/>
                            <option type="column" name="orderedQuantity" fields="orderedQuantity"/>

                            <option type="column" name="orderQuantity" fields="orderQuantity" formatter="input"/>

                            <option type="order" column="productFamily,succession" direction="asc"/>

                            <option type="searchable" value=""/>
                            <option type="orderable" value=""/>

                            <option type="suppressSelectEvent" value="true"/>

                            <option type="paginable" value="false"/>


                        </component>
                    </layoutElement>
                </component>

                <option type="header" value="true"/>
                <option type="expression" value=""/>

            </component>
        </windowTab>

    </component>

    <hooks/>

</view>
