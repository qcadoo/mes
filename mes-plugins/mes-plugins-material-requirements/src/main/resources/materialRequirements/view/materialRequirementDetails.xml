<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_REQUIREMENTS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="materialRequirementDetails" modelName="materialRequirement">

    <component type="window" name="window" reference="window">

        <ribbon>
            <template name="standardFormTemplate"/>
            <group name="generate">
                <bigButton name="generate" icon="generateIcon24.png"
                           action="#{form}.fireEvent(generateMaterialRequirement);" state="enabled"/>
            </group>
            <group name="export">
                <smallButton name="pdf" icon="pdfIcon16.png"
                             action="#{form}.fireEvent(printMaterialRequirement,pdf);" state="disabled"/>
                <smallButton name="xls" icon="xlsIcon16.png"
                             action="#{form}.fireEvent(printMaterialRequirement,xls);" state="disabled"/>
            </group>
        </ribbon>

        <windowTab name="mainTab">
            <component type="form" name="materialRequirement" reference="form">
                <script>
                    <![CDATA[
						var saveButton = #{window}.getRibbonItem("actions.save");
						var saveBackButton = #{window}.getRibbonItem("actions.saveBack");
						var saveNewButton = #{window}.getRibbonItem("actions.saveNew");
						var copyButton = #{window}.getRibbonItem("actions.copy");
						var cancelButton = #{window}.getRibbonItem("actions.cancel");
						var generateButton = #{window}.getRibbonItem("generate.generate");
						var pdfButton = #{window}.getRibbonItem("export.pdf");
						var xlsButton = #{window}.getRibbonItem("export.xls");

						var containsAtLeastOneOrder = false;
						var entityExists = false;

						this.addOnChangeListener({
							onSetValue: function(value) {
								if (!value || !value.content) {
									return;
								}
								if (value.content.entityId) {
									entityExists = true;
								} else {
									entityExists = false;
								}
								updateRibbon();
							}
						});

						#{orders}.addOnChangeListener({
							onSetValue: function(value) {
								if (value.content.totalEntities > 0) {
									containsAtLeastOneOrder = true;
								} else {
									containsAtLeastOneOrder = false;
								}
								updateRibbon();
							}
						});

						function updateRibbon() {
							if (entityExists) {
								copyButton.enable();

								var isGeneratedCheckboxValue = #{generated}.getValue();
								var generated = false;

								if (isGeneratedCheckboxValue && isGeneratedCheckboxValue.content.value == "1") {
									var generated = true;
								}

								if (containsAtLeastOneOrder) {
									if (generated) {
										saveButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordAlreadyGenerated)}");
										saveBackButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordAlreadyGenerated)}");
										saveNewButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordAlreadyGenerated)}");
										cancelButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordAlreadyGenerated)}");
										generateButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordAlreadyGenerated)}");
										pdfButton.enable();
										xlsButton.enable();
									} else {
										saveButton.enable();
										saveBackButton.enable();
										saveNewButton.enable();
										cancelButton.enable();
										generateButton.enable();
										pdfButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
										xlsButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
									}
								} else {
									saveButton.enable();
									saveBackButton.enable();
									saveNewButton.enable();
									cancelButton.enable();
									generateButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.noOrders)}");
									pdfButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
									xlsButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
								}
							} else {
								saveButton.enable();
								saveBackButton.enable();
								saveNewButton.enable();
								cancelButton.enable();
								copyButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
								generateButton.disable();
								pdfButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
								xlsButton.disable("#{translate(materialRequirements.materialRequirementDetails.ribbon.message.recordNotGenerated)}");
							}
						}
					]]>
                </script>

                <component type="gridLayout" name="gridLayout" columns="3"
                           rows="1">
                    <layoutElement column="1" row="1">
                        <component type="gridLayout" name="leftGridLayout" columns="1"
                                   rows="12">
                            <layoutElement column="1" row="1">
                                <component type="checkbox" name="generated" reference="generated"
                                           field="generated" defaultEnabled="false">
                                    <option type="textRepresentationOnDisabled" value="false"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="2">
                                <component type="input" name="date" reference="date"
                                           field="date" defaultEnabled="false">
                                    <option type="textRepresentationOnDisabled" value="false"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="3">
                                <component type="input" name="worker" reference="worker"
                                           field="worker" defaultEnabled="false">
                                    <option type="textRepresentationOnDisabled" value="false"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="4">
                                <component type="input" name="number" reference="number"
                                           field="number"/>
                            </layoutElement>
                            <layoutElement column="1" row="5" height="2">
                                <component type="textarea" name="name" reference="name"
                                           field="name"/>
                            </layoutElement>
                            <layoutElement column="1" row="7">
                                <component type="select" name="mrpAlgorithm" reference="mrpAlgorithm"
                                           field="mrpAlgorithm">
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="8">
                                <component type="checkbox" name="includeWarehouse" reference="includeWarehouse"
                                           field="includeWarehouse" hasDescription="true">
                                    <listener event="onChange"
                                              class="com.qcadoo.view.api.listeners.RerenderListener"
                                              method="onChangeRerender"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="9">
                                <component type="lookup" name="location" field="location"
                                           reference="location">
                                    <option type="column" name="name" fields="name"/>

                                    <option type="searchable" value="number,name"/>
                                    <option type="orderable" value="number,name"/>

                                    <option type="expression" value="#number + ' - ' + #name"/>
                                    <option type="fieldCode" value="number"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="10">
                                <component type="checkbox" name="showCurrentStockLevel"
                                           reference="showCurrentStockLevel"
                                           field="showCurrentStockLevel" hasDescription="true">
                                    <listener event="onChange"
                                              class="com.qcadoo.view.api.listeners.RerenderListener"
                                              method="onChangeRerender"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="11">
                                <component type="lookup" name="stockLevelLocation" field="stockLevelLocation"
                                           reference="stockLevelLocation" hasDescription="true">
                                    <option type="column" name="name" fields="name"/>

                                    <option type="searchable" value="number,name"/>
                                    <option type="orderable" value="number,name"/>

                                    <option type="expression" value="#number + ' - ' + #name"/>
                                    <option type="fieldCode" value="number"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="12">
                                <component type="checkbox" name="includeStartDateOrder"
                                           reference="includeStartDateOrder"
                                           field="includeStartDateOrder" hasDescription="true">
                                </component>
                            </layoutElement>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="1" width="2">
                        <component type="gridLayout" name="rightGridLayout" columns="1"
                                   rows="1">
                            <layoutElement column="1" row="1">
                                <component type="lookup" name="order" reference="orderLookup"
                                           field="orders" defaultVisible="false" persistent="false" hasLabel="false">
                                    <option type="column" name="name" fields="name" link="true"
                                            width="100"/>
                                    <option type="column" name="dateFrom" fields="dateFrom"
                                            link="false" width="100"/>
                                    <option type="column" name="dateTo" fields="dateTo"
                                            link="false" width="100"/>

                                    <option type="searchable" value="number,name,dateFrom,dateTo"/>
                                    <option type="orderable" value="number,name,dateFrom,dateTo"/>

                                    <option type="expression"
                                            value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                                    <option type="fieldCode" value="number"/>

                                    <option type="multiselect" value="true"/>
                                </component>
                                <component type="grid" name="orders"
                                           reference="orders" source="#{form}.orders"
                                           defaultEnabled="false">
                                    <option type="column" name="number" fields="number" width="50"/>
                                    <option type="column" name="name" fields="name"/>

                                    <option type="order" column="number" direction="desc"/>

                                    <option type="paginable" value="false"/>
                                    <option type="multiselect" value="true"/>
                                    <option type="creatable" value="true"/>
                                    <option type="deletable" value="true"/>

                                    <option type="weakRelation" value="true"/>
                                    <option type="correspondingLookup" value="orderLookup"/>
                                </component>
                            </layoutElement>
                        </component>
                    </layoutElement>
                </component>

                <option type="header" value="true"/>
                <option type="expression" value="#name"/>

                <listener event="printMaterialRequirement"
                          class="com.qcadoo.mes.materialRequirements.listeners.MaterialRequirementDetailsListeners"
                          method="printMaterialRequirement"/>
                <listener event="generateMaterialRequirement"
                          class="com.qcadoo.mes.materialRequirements.listeners.MaterialRequirementDetailsListeners"
                          method="generateMaterialRequirement"/>
            </component>
        </windowTab>

        <windowTab name="materialsTab">
            <component type="grid" name="materialRequirementProducts" source="#{form}.materialRequirementProducts"
                       reference="grid">
                <option type="column" name="productNumber" fields="product"
                        expression="#product.get('number')"
                        width="100"/>
                <option type="column" name="productName" fields="product"
                        expression="#product.get('name')"
                        width="100"/>
                <option type="column" name="quantity" fields="quantity"
                        width="60"/>
                <option type="column" name="productUnit" fields="product"
                        expression="#product.get('unit')"
                        width="40"/>
                <option type="column" name="batchNumber" fields="batch"
                        expression="#batch?.get('number')"
                        width="100"/>
                <option type="column" name="locationNumber" fields="location"
                        expression="#location?.get('number')"
                        width="100"/>
                <option type="column" name="currentStock" fields="currentStock"
                        width="60"/>
                <option type="column" name="batchStock" fields="batchStock"
                        width="60"/>
                <option type="column" name="orderStartDate" fields="orderStartDate"
                        width="80"/>

                <option type="order" column="productNumber" direction="asc"/>

                <option type="searchable"
                        value="productNumber,productName,quantity,productUnit,batchNumber,locationNumber,currentStock,batchStock,orderStartDate"/>
                <option type="orderable"
                        value="productNumber,productName,quantity,productUnit,batchNumber,locationNumber,currentStock,batchStock,orderStartDate"/>

                <option type="fullscreen" value="true"/>
                <option type="multiselect" value="true"/>
                <option type="fixedHeight" value="true"/>
            </component>
        </windowTab>

    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.materialRequirements.hooks.MaterialRequirementDetailsHooks"
                method="onBeforeRender"/>
    </hooks>

</view>
